dnl
dnl This file was autogenerated from "configure.ac.in".
dnl Edit that file instead!
dnl

dnl ***************************
dnl *** Version information ***
dnl ***************************
m4_define([wikipad_version_major], [0])
m4_define([wikipad_version_minor], [75])
m4_define([wikipad_version_micro], [0])
m4_define([wikipad_version_nano], []) dnl leave this empty to have no nano version
m4_define([wikipad_version_build], [1fabc6d])
m4_define([wikipad_version_tag], [])
m4_define([wikipad_version], [wikipad_version_major().wikipad_version_minor().wikipad_version_micro()ifelse(wikipad_version_nano(), [], [], [.wikipad_version_nano()])ifelse(wikipad_version_tag(), [git], [wikipad_version_tag()-wikipad_version_build()], [wikipad_version_tag()])])

dnl *******************************************
dnl *** Debugging support for GIT snapshots ***
dnl *******************************************
m4_define([wikipad_debug_default], [ifelse(wikipad_version_tag(), [git], [yes], [minimum])])

dnl ***************************
dnl *** Initialize autoconf ***
dnl ***************************
AC_COPYRIGHT([Copyright (c) 2015 phm.link Some rights reserved.])
AC_INIT([Wikipad], [wikipad_version], [http://github.com/paulmadore/wikipad], [wikipad])
AC_PREREQ([2.50])
AC_CONFIG_MACRO_DIR([m4])
AC_CANONICAL_TARGET()
AC_REVISION([])

dnl ***************************
dnl *** Initialize automake ***
dnl ***************************
AM_INIT_AUTOMAKE([1.8 no-dist-gzip dist-bzip2 tar-ustar])
AC_CONFIG_HEADERS([config.h])
AM_MAINTAINER_MODE()
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

dnl *******************************
dnl *** Check for UNIX variants ***
dnl *******************************
AC_AIX()
AC_ISC_POSIX()
AC_MINIX()

dnl ********************************
dnl *** Check for basic programs ***
dnl ********************************
AC_PROG_CC()
AM_PROG_CC_C_O()
AC_PROG_LD()
AC_PROG_INSTALL()
AC_PROG_INTLTOOL()
AC_CHECK_PROGS([PERL], [perl5 perl])

dnl **************************
dnl *** Initialize libtool ***
dnl **************************
LT_PREREQ([2.2.6])
LT_INIT([disable-static])

dnl **************************************
dnl *** Substitute version information ***
dnl **************************************
WIKIPAD_VERSION_MAJOR=wikipad_version_major()
WIKIPAD_VERSION_MINOR=wikipad_version_minor()
WIKIPAD_VERSION_MICRO=wikipad_version_micro()
WIKIPAD_VERSION_NANO=wikipad_version_nano()
AC_SUBST([WIKIPAD_VERSION_MAJOR])
AC_SUBST([WIKIPAD_VERSION_MINOR])
AC_SUBST([WIKIPAD_VERSION_MICRO])
AC_SUBST([WIKIPAD_VERSION_NANO])

dnl **********************************
dnl *** Check for standard headers ***
dnl **********************************
AC_CHECK_HEADERS([errno.h fcntl.h libintl.h memory.h math.h stdlib.h \
                  string.h sys/types.h sys/stat.h time.h unistd.h])

dnl ******************************
dnl *** Check for i18n support ***
dnl ******************************
XDT_I18N([ar ast bg ca cs da de el en_AU en_GB es eu fi fr gl he hr hu id is it ja kk ko lt ms nb nl nn oc pl pt_BR pt ro ru sk sr sv te th tr ug uk zh_CN zh_TW ])

dnl ***********************************
dnl *** Check for required packages ***
dnl ***********************************
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [2.30.0])
XDT_CHECK_PACKAGE([GTHREAD], [gthread-2.0], [2.30.0])

dnl **********************
dnl *** GTK+ 3 support ***
dnl **********************

AC_ARG_ENABLE([gtk3],
              [AS_HELP_STRING([--enable-gtk3],
                              [Build against GTK+ 3 instead of GTK+ 2])],
              [enable_gtk3=$enableval],
              [enable_gtk3=auto])

AS_IF([test "x$enable_gtk3" = "xyes"],
      [PKG_CHECK_MODULES([GTK], [gtk+-3.0])])

AS_IF([test "x$enable_gtk3" = "xauto"],
      [PKG_CHECK_MODULES([GTK], [gtk+-3.0],
                         [enable_gtk3=yes], [enable_gtk3=no])])

AS_IF([test "x$enable_gtk3" = "xno"],
      [PKG_CHECK_MODULES([GTK], [gtk+-2.0 >= 2.24])])

AS_IF([test "x$enable_gtk3" = "xyes"],
      [PKG_CHECK_MODULES([GTKSOURCEVIEW], [gtksourceview-3.0])],
      [PKG_CHECK_MODULES([GTKSOURCEVIEW], [gtksourceview-2.0])])

AM_CONDITIONAL([WITH_GTK3], [test "x$enable_gtk3" = "xyes"])

dnl ************************************
dnl *** Enable support for GSettings ***
dnl ************************************
GLIB_GSETTINGS

AC_ARG_ENABLE([keyfile-settings],
              [AS_HELP_STRING([--enable-keyfile-settings],
                              [Use the GSettings keyfile backend rather than the default])],
              [enable_keyfile_settings="yes"],
              [enable_keyfile_settings="default"])

AM_CONDITIONAL([WITH_KEYFILE_SETTINGS],
               [test "x$enable_keyfile_settings" = "xyes"])

dnl **********************************
dnl *** Optional support for D-BUS ***
dnl **********************************
XDT_CHECK_OPTIONAL_PACKAGE([DBUS], [dbus-glib-1],
                           [0.34], [dbus], [D-BUS support])

dnl ***********************************
dnl *** Check for debugging support ***
dnl ***********************************
XDT_FEATURE_DEBUG([wikipad_debug_default])

dnl **************************************
dnl *** Check for linker optimizations ***
dnl **************************************
XDT_FEATURE_LINKER_OPTS()

dnl *********************************
dnl *** Substitute platform flags ***
dnl *********************************
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])

AC_OUTPUT([
Makefile
wikipad/Makefile
po/Makefile.in
])

dnl ***************************
dnl *** Print configuration ***
dnl ***************************
echo
echo "Build Configuration:"
echo
if test x"$DBUS_FOUND" = x"yes"; then
echo "* D-BUS support:             yes"
else
echo "* D-BUS support:             no"
fi
echo "* Debug Support:             $enable_debug"
echo "* Use keyfile backend:       $enable_keyfile_settings"
echo "* Build with GTK+ 3:         $enable_gtk3"
echo
